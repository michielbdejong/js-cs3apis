// source: cs3/ocm/invite/v1beta1/invite_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_identity_user_v1beta1_resources_pb = require('../../../../cs3/identity/user/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_identity_user_v1beta1_resources_pb);
var cs3_ocm_invite_v1beta1_resources_pb = require('../../../../cs3/ocm/invite/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_ocm_invite_v1beta1_resources_pb);
var cs3_ocm_provider_v1beta1_resources_pb = require('../../../../cs3/ocm/provider/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_ocm_provider_v1beta1_resources_pb);
var cs3_rpc_v1beta1_status_pb = require('../../../../cs3/rpc/v1beta1/status_pb.js');
goog.object.extend(proto, cs3_rpc_v1beta1_status_pb);
var cs3_types_v1beta1_types_pb = require('../../../../cs3/types/v1beta1/types_pb.js');
goog.object.extend(proto, cs3_types_v1beta1_types_pb);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest', null, global);
goog.exportSymbol('proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.displayName = 'proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.displayName = 'proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.displayName = 'proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.displayName = 'proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.displayName = 'proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.displayName = 'proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.displayName = 'proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.displayName = 'proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.displayName = 'proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.displayName = 'proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest;
  return proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    inviteToken: (f = msg.getInviteToken()) && cs3_ocm_invite_v1beta1_resources_pb.InviteToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse;
  return proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_ocm_invite_v1beta1_resources_pb.InviteToken;
      reader.readMessage(value,cs3_ocm_invite_v1beta1_resources_pb.InviteToken.deserializeBinaryFromReader);
      msg.setInviteToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getInviteToken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_ocm_invite_v1beta1_resources_pb.InviteToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InviteToken invite_token = 3;
 * @return {?proto.cs3.ocm.invite.v1beta1.InviteToken}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.getInviteToken = function() {
  return /** @type{?proto.cs3.ocm.invite.v1beta1.InviteToken} */ (
    jspb.Message.getWrapperField(this, cs3_ocm_invite_v1beta1_resources_pb.InviteToken, 3));
};


/**
 * @param {?proto.cs3.ocm.invite.v1beta1.InviteToken|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.setInviteToken = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.clearInviteToken = function() {
  return this.setInviteToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GenerateInviteTokenResponse.prototype.hasInviteToken = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    inviteToken: (f = msg.getInviteToken()) && cs3_ocm_invite_v1beta1_resources_pb.InviteToken.toObject(includeInstance, f),
    originSystemProvider: (f = msg.getOriginSystemProvider()) && cs3_ocm_provider_v1beta1_resources_pb.ProviderInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest;
  return proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocm_invite_v1beta1_resources_pb.InviteToken;
      reader.readMessage(value,cs3_ocm_invite_v1beta1_resources_pb.InviteToken.deserializeBinaryFromReader);
      msg.setInviteToken(value);
      break;
    case 3:
      var value = new cs3_ocm_provider_v1beta1_resources_pb.ProviderInfo;
      reader.readMessage(value,cs3_ocm_provider_v1beta1_resources_pb.ProviderInfo.deserializeBinaryFromReader);
      msg.setOriginSystemProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getInviteToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocm_invite_v1beta1_resources_pb.InviteToken.serializeBinaryToWriter
    );
  }
  f = message.getOriginSystemProvider();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_ocm_provider_v1beta1_resources_pb.ProviderInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InviteToken invite_token = 2;
 * @return {?proto.cs3.ocm.invite.v1beta1.InviteToken}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.getInviteToken = function() {
  return /** @type{?proto.cs3.ocm.invite.v1beta1.InviteToken} */ (
    jspb.Message.getWrapperField(this, cs3_ocm_invite_v1beta1_resources_pb.InviteToken, 2));
};


/**
 * @param {?proto.cs3.ocm.invite.v1beta1.InviteToken|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.setInviteToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.clearInviteToken = function() {
  return this.setInviteToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.hasInviteToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.ocm.provider.v1beta1.ProviderInfo origin_system_provider = 3;
 * @return {?proto.cs3.ocm.provider.v1beta1.ProviderInfo}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.getOriginSystemProvider = function() {
  return /** @type{?proto.cs3.ocm.provider.v1beta1.ProviderInfo} */ (
    jspb.Message.getWrapperField(this, cs3_ocm_provider_v1beta1_resources_pb.ProviderInfo, 3));
};


/**
 * @param {?proto.cs3.ocm.provider.v1beta1.ProviderInfo|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.setOriginSystemProvider = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.clearOriginSystemProvider = function() {
  return this.setOriginSystemProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteRequest.prototype.hasOriginSystemProvider = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse;
  return proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.ForwardInviteResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    inviteToken: (f = msg.getInviteToken()) && cs3_ocm_invite_v1beta1_resources_pb.InviteToken.toObject(includeInstance, f),
    remoteUser: (f = msg.getRemoteUser()) && cs3_identity_user_v1beta1_resources_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest;
  return proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_ocm_invite_v1beta1_resources_pb.InviteToken;
      reader.readMessage(value,cs3_ocm_invite_v1beta1_resources_pb.InviteToken.deserializeBinaryFromReader);
      msg.setInviteToken(value);
      break;
    case 3:
      var value = new cs3_identity_user_v1beta1_resources_pb.User;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.User.deserializeBinaryFromReader);
      msg.setRemoteUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getInviteToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_ocm_invite_v1beta1_resources_pb.InviteToken.serializeBinaryToWriter
    );
  }
  f = message.getRemoteUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_identity_user_v1beta1_resources_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InviteToken invite_token = 2;
 * @return {?proto.cs3.ocm.invite.v1beta1.InviteToken}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.getInviteToken = function() {
  return /** @type{?proto.cs3.ocm.invite.v1beta1.InviteToken} */ (
    jspb.Message.getWrapperField(this, cs3_ocm_invite_v1beta1_resources_pb.InviteToken, 2));
};


/**
 * @param {?proto.cs3.ocm.invite.v1beta1.InviteToken|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.setInviteToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.clearInviteToken = function() {
  return this.setInviteToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.hasInviteToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.identity.user.v1beta1.User remote_user = 3;
 * @return {?proto.cs3.identity.user.v1beta1.User}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.getRemoteUser = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.User} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.User, 3));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.User|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.setRemoteUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.clearRemoteUser = function() {
  return this.setRemoteUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteRequest.prototype.hasRemoteUser = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse;
  return proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.AcceptInviteResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    remoteUserId: (f = msg.getRemoteUserId()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest;
  return proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setRemoteUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRemoteUserId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId remote_user_id = 2;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.getRemoteUserId = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 2));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.setRemoteUserId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.clearRemoteUserId = function() {
  return this.setRemoteUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserRequest.prototype.hasRemoteUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    remoteUser: (f = msg.getRemoteUser()) && cs3_identity_user_v1beta1_resources_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse;
  return proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_identity_user_v1beta1_resources_pb.User;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.User.deserializeBinaryFromReader);
      msg.setRemoteUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getRemoteUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_identity_user_v1beta1_resources_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cs3.identity.user.v1beta1.User remote_user = 3;
 * @return {?proto.cs3.identity.user.v1beta1.User}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.getRemoteUser = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.User} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.User, 3));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.User|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.setRemoteUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.clearRemoteUser = function() {
  return this.setRemoteUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.GetAcceptedUserResponse.prototype.hasRemoteUser = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    filter: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest;
  return proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} returns this
*/
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest} returns this
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    acceptedUsersList: jspb.Message.toObjectList(msg.getAcceptedUsersList(),
    cs3_identity_user_v1beta1_resources_pb.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse;
  return proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_identity_user_v1beta1_resources_pb.User;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.User.deserializeBinaryFromReader);
      msg.addAcceptedUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cs3_identity_user_v1beta1_resources_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cs3.identity.user.v1beta1.User accepted_users = 3;
 * @return {!Array<!proto.cs3.identity.user.v1beta1.User>}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.getAcceptedUsersList = function() {
  return /** @type{!Array<!proto.cs3.identity.user.v1beta1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, cs3_identity_user_v1beta1_resources_pb.User, 3));
};


/**
 * @param {!Array<!proto.cs3.identity.user.v1beta1.User>} value
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
*/
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.setAcceptedUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cs3.identity.user.v1beta1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.identity.user.v1beta1.User}
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.addAcceptedUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cs3.identity.user.v1beta1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse} returns this
 */
proto.cs3.ocm.invite.v1beta1.FindAcceptedUsersResponse.prototype.clearAcceptedUsersList = function() {
  return this.setAcceptedUsersList([]);
};


goog.object.extend(exports, proto.cs3.ocm.invite.v1beta1);
