// source: cs3/auth/applications/v1beta1/applications_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var cs3_auth_applications_v1beta1_resources_pb = require('../../../../cs3/auth/applications/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_auth_applications_v1beta1_resources_pb);
var cs3_auth_provider_v1beta1_resources_pb = require('../../../../cs3/auth/provider/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_auth_provider_v1beta1_resources_pb);
var cs3_identity_user_v1beta1_resources_pb = require('../../../../cs3/identity/user/v1beta1/resources_pb.js');
goog.object.extend(proto, cs3_identity_user_v1beta1_resources_pb);
var cs3_rpc_v1beta1_status_pb = require('../../../../cs3/rpc/v1beta1/status_pb.js');
goog.object.extend(proto, cs3_rpc_v1beta1_status_pb);
var cs3_types_v1beta1_types_pb = require('../../../../cs3/types/v1beta1/types_pb.js');
goog.object.extend(proto, cs3_types_v1beta1_types_pb);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest', null, global);
goog.exportSymbol('proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.displayName = 'proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.displayName = 'proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.displayName = 'proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.repeatedFields_, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.displayName = 'proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.displayName = 'proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.displayName = 'proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.displayName = 'proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.displayName = 'proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    tokenScopeMap: (f = msg.getTokenScopeMap()) ? f.toObject(includeInstance, proto.cs3.auth.provider.v1beta1.Scope.toObject) : [],
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expiration: (f = msg.getExpiration()) && cs3_types_v1beta1_types_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest;
  return proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = msg.getTokenScopeMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.cs3.auth.provider.v1beta1.Scope.deserializeBinaryFromReader, "", new proto.cs3.auth.provider.v1beta1.Scope());
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = new cs3_types_v1beta1_types_pb.Timestamp;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getTokenScopeMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.cs3.auth.provider.v1beta1.Scope.serializeBinaryToWriter);
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cs3_types_v1beta1_types_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, cs3.auth.provider.v1beta1.Scope> token_scope = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.cs3.auth.provider.v1beta1.Scope>}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.getTokenScopeMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.cs3.auth.provider.v1beta1.Scope>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.cs3.auth.provider.v1beta1.Scope));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.clearTokenScopeMap = function() {
  this.getTokenScopeMap().clear();
  return this;};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional cs3.types.v1beta1.Timestamp expiration = 4;
 * @return {?proto.cs3.types.v1beta1.Timestamp}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.getExpiration = function() {
  return /** @type{?proto.cs3.types.v1beta1.Timestamp} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Timestamp, 4));
};


/**
 * @param {?proto.cs3.types.v1beta1.Timestamp|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordRequest.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    appPassword: (f = msg.getAppPassword()) && cs3_auth_applications_v1beta1_resources_pb.AppPassword.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse;
  return proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_auth_applications_v1beta1_resources_pb.AppPassword;
      reader.readMessage(value,cs3_auth_applications_v1beta1_resources_pb.AppPassword.deserializeBinaryFromReader);
      msg.setAppPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getAppPassword();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_auth_applications_v1beta1_resources_pb.AppPassword.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AppPassword app_password = 3;
 * @return {?proto.cs3.auth.applications.v1beta1.AppPassword}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.getAppPassword = function() {
  return /** @type{?proto.cs3.auth.applications.v1beta1.AppPassword} */ (
    jspb.Message.getWrapperField(this, cs3_auth_applications_v1beta1_resources_pb.AppPassword, 3));
};


/**
 * @param {?proto.cs3.auth.applications.v1beta1.AppPassword|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.setAppPassword = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.clearAppPassword = function() {
  return this.setAppPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GenerateAppPasswordResponse.prototype.hasAppPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest;
  return proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    appPasswordsList: jspb.Message.toObjectList(msg.getAppPasswordsList(),
    cs3_auth_applications_v1beta1_resources_pb.AppPassword.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse;
  return proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_auth_applications_v1beta1_resources_pb.AppPassword;
      reader.readMessage(value,cs3_auth_applications_v1beta1_resources_pb.AppPassword.deserializeBinaryFromReader);
      msg.addAppPasswords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getAppPasswordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cs3_auth_applications_v1beta1_resources_pb.AppPassword.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated AppPassword app_passwords = 3;
 * @return {!Array<!proto.cs3.auth.applications.v1beta1.AppPassword>}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.getAppPasswordsList = function() {
  return /** @type{!Array<!proto.cs3.auth.applications.v1beta1.AppPassword>} */ (
    jspb.Message.getRepeatedWrapperField(this, cs3_auth_applications_v1beta1_resources_pb.AppPassword, 3));
};


/**
 * @param {!Array<!proto.cs3.auth.applications.v1beta1.AppPassword>} value
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.setAppPasswordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cs3.auth.applications.v1beta1.AppPassword=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs3.auth.applications.v1beta1.AppPassword}
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.addAppPasswords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cs3.auth.applications.v1beta1.AppPassword, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.ListAppPasswordsResponse.prototype.clearAppPasswordsList = function() {
  return this.setAppPasswordsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest;
  return proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse;
  return proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.InvalidateAppPasswordResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    user: (f = msg.getUser()) && cs3_identity_user_v1beta1_resources_pb.UserId.toObject(includeInstance, f),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest;
  return proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 2:
      var value = new cs3_identity_user_v1beta1_resources_pb.UserId;
      reader.readMessage(value,cs3_identity_user_v1beta1_resources_pb.UserId.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_identity_user_v1beta1_resources_pb.UserId.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 1;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 1));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.identity.user.v1beta1.UserId user = 2;
 * @return {?proto.cs3.identity.user.v1beta1.UserId}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.getUser = function() {
  return /** @type{?proto.cs3.identity.user.v1beta1.UserId} */ (
    jspb.Message.getWrapperField(this, cs3_identity_user_v1beta1_resources_pb.UserId, 2));
};


/**
 * @param {?proto.cs3.identity.user.v1beta1.UserId|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} returns this
*/
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && cs3_rpc_v1beta1_status_pb.Status.toObject(includeInstance, f),
    opaque: (f = msg.getOpaque()) && cs3_types_v1beta1_types_pb.Opaque.toObject(includeInstance, f),
    appPassword: (f = msg.getAppPassword()) && cs3_auth_applications_v1beta1_resources_pb.AppPassword.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse;
  return proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cs3_rpc_v1beta1_status_pb.Status;
      reader.readMessage(value,cs3_rpc_v1beta1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new cs3_types_v1beta1_types_pb.Opaque;
      reader.readMessage(value,cs3_types_v1beta1_types_pb.Opaque.deserializeBinaryFromReader);
      msg.setOpaque(value);
      break;
    case 3:
      var value = new cs3_auth_applications_v1beta1_resources_pb.AppPassword;
      reader.readMessage(value,cs3_auth_applications_v1beta1_resources_pb.AppPassword.deserializeBinaryFromReader);
      msg.setAppPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cs3_rpc_v1beta1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getOpaque();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cs3_types_v1beta1_types_pb.Opaque.serializeBinaryToWriter
    );
  }
  f = message.getAppPassword();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cs3_auth_applications_v1beta1_resources_pb.AppPassword.serializeBinaryToWriter
    );
  }
};


/**
 * optional cs3.rpc.v1beta1.Status status = 1;
 * @return {?proto.cs3.rpc.v1beta1.Status}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.getStatus = function() {
  return /** @type{?proto.cs3.rpc.v1beta1.Status} */ (
    jspb.Message.getWrapperField(this, cs3_rpc_v1beta1_status_pb.Status, 1));
};


/**
 * @param {?proto.cs3.rpc.v1beta1.Status|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cs3.types.v1beta1.Opaque opaque = 2;
 * @return {?proto.cs3.types.v1beta1.Opaque}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.getOpaque = function() {
  return /** @type{?proto.cs3.types.v1beta1.Opaque} */ (
    jspb.Message.getWrapperField(this, cs3_types_v1beta1_types_pb.Opaque, 2));
};


/**
 * @param {?proto.cs3.types.v1beta1.Opaque|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.setOpaque = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.clearOpaque = function() {
  return this.setOpaque(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.hasOpaque = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AppPassword app_password = 3;
 * @return {?proto.cs3.auth.applications.v1beta1.AppPassword}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.getAppPassword = function() {
  return /** @type{?proto.cs3.auth.applications.v1beta1.AppPassword} */ (
    jspb.Message.getWrapperField(this, cs3_auth_applications_v1beta1_resources_pb.AppPassword, 3));
};


/**
 * @param {?proto.cs3.auth.applications.v1beta1.AppPassword|undefined} value
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
*/
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.setAppPassword = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse} returns this
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.clearAppPassword = function() {
  return this.setAppPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs3.auth.applications.v1beta1.GetAppPasswordResponse.prototype.hasAppPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.cs3.auth.applications.v1beta1);
